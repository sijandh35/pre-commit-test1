version: "3"

services:
  web:
    image: project:0.0.1 # needs 'docker build -t project:0.0.1 .' first 
    restart: always
    container_name: web
    ports:
      - 8000:8000
    volumes:
      - ./sock/:/sock/
      - ./:/code
      - ./logs/:/logs/
    command: sh entrypoint.sh
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - django_nw

  worker:
    image: project:0.0.1
    restart: always
    container_name: worker
    command: "celery -A project worker -f /logs/worker.log -l DEBUG"
    depends_on:
      - web
    volumes:
      - ./logs/:/logs/
    env_file:
      - env.txt
    networks:
      - django_nw

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - 80:80
      - 443:443 
    volumes:
      - ./nginx/nginx-proxy.conf:/etc/nginx/conf.d/default.conf   # Change nginx/nginx-proxy-sample.conf to nginx-proxy.conf
      - ./frontend_app/dist:/var/www/frontend
      - ./sock/:/sock/
      - ./logs/nginx:/var/log/nginx
      - ./static:/static
    depends_on:
      - web
      - worker
    networks:
      - django_nw
  
  db:
    image: mdillon/postgis:11-alpine
    container_name: db
    restart: always
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    ports: 
      - 5432:5432
    env_file:
      - pg_env.txt
    networks:
      - django_nw

  redis:
    image: redis:alpine
    restart: always
    container_name: redis
    command: redis-server --appendonly yes
    ports:
      - 6379:6379
    volumes:
      - ./_redis_data:/var/lib/redis
      - ./redis/rc.local:/etc/rc.local
    networks:
      - django_nw

networks:
  django_nw:
    driver: bridge
